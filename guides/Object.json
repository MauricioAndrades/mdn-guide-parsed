[
  {
    "name": "Object.prototype",
    "desc": "The Object.prototype property represents the Object prototype object.",
    "href": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/prototype",
    "type": "Property"
  },
  {
    "name": "Object.prototype.__proto__",
    "desc": "The __proto__ property of Object.prototype is an accessor property (a getter function and a setter function) that exposes the internal [[Prototype]] (either an object or null) of the object through which it is accessed.",
    "href": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/proto",
    "type": "Property",
    "warning": "This deprecated API should no longer be used, but will probably still work."
  },
  {
    "name": "Object.prototype.constructor",
    "desc": "Returns a reference to the Object function that created the instance's prototype. Note that the value of this property is a reference to the function itself, not a string containing the function's name. The value is only read-only for primitive values such as 1, true and \"test\".",
    "href": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/constructor",
    "type": "Property"
  },
  {
    "name": "Object.assign()",
    "desc": "The Object.assign() method is used to copy the values of all enumerable own properties from one or more source objects to a target object. It will return the target object.",
    "href": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/assign",
    "type": "Method"
  },
  {
    "name": "Object.create()",
    "desc": "The Object.create() method creates a new object with the specified prototype object and properties.",
    "href": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/create",
    "type": "Method"
  },
  {
    "name": "Object.defineProperties()",
    "desc": "The Object.defineProperties() method defines new or modifies existing properties directly on an object, returning the object.",
    "href": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/defineProperties",
    "type": "Method"
  },
  {
    "name": "Object.defineProperty()",
    "desc": "The Object.defineProperty() method defines a new property directly on an object, or modifies an existing property on an object, and returns the object.",
    "href": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/defineProperty",
    "type": "Method"
  },
  {
    "name": "Object.entries()",
    "desc": "The Object.entries() method returns an array of a given object's own enumerable property [key, value] pairs, in the same order as that provided by a for...in loop (the difference being that a for-in loop enumerates properties in the prototype chain as well).",
    "href": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/entries",
    "type": "Method",
    "warning": "This is an experimental API that should not be used in production code."
  },
  {
    "name": "Object.freeze()",
    "desc": "The Object.freeze() method freezes an object: that is, prevents new properties from being added to it; prevents existing properties from being removed; and prevents existing properties, or their enumerability, configurability, or writability, from being changed. In essence the object is made effectively immutable. The method returns the object being frozen.",
    "href": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/freeze",
    "type": "Method"
  },
  {
    "name": "Object.getOwnPropertyDescriptor()",
    "desc": "The Object.getOwnPropertyDescriptor() method returns a property descriptor for an own property (that is, one directly present on an object, not present by dint of being along an object's prototype chain) of a given object.",
    "href": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/getOwnPropertyDescriptor",
    "type": "Method"
  },
  {
    "name": "Object.getOwnPropertyDescriptors()",
    "desc": "The Object.getOwnPropertyDescriptors() method returns all own property descriptors of a given object.",
    "href": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/getOwnPropertyDescriptors",
    "type": "Method"
  },
  {
    "name": "Object.getOwnPropertyNames()",
    "desc": "The Object.getOwnPropertyNames() method returns an array of all properties (enumerable or not) found directly upon a given object.",
    "href": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/getOwnPropertyNames",
    "type": "Method"
  },
  {
    "name": "Object.getOwnPropertySymbols()",
    "desc": "The Object.getOwnPropertySymbols() method returns an array of all symbol properties found directly upon a given object.",
    "href": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/getOwnPropertySymbols",
    "type": "Method"
  },
  {
    "name": "Object.getPrototypeOf()",
    "desc": "The Object.getPrototypeOf() method returns the prototype (i.e. the value of the internal [[Prototype]] property) of the specified object.",
    "href": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/getPrototypeOf",
    "type": "Method"
  },
  {
    "name": "Object.is()",
    "desc": "The Object.is() method determines whether two values are the same value.",
    "href": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is",
    "type": "Method"
  },
  {
    "name": "Object.isExtensible()",
    "desc": "The Object.isExtensible() method determines if an object is extensible (whether it can have new properties added to it).",
    "href": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/isExtensible",
    "type": "Method"
  },
  {
    "name": "Object.isFrozen()",
    "desc": "The Object.isFrozen() determines if an object is frozen.",
    "href": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/isFrozen",
    "type": "Method"
  },
  {
    "name": "Object.isSealed()",
    "desc": "The Object.isSealed() method determines if an object is sealed.",
    "href": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/isSealed",
    "type": "Method"
  },
  {
    "name": "Object.keys()",
    "desc": "The Object.keys() method returns an array of a given object's own enumerable properties, in the same order as that provided by a for...in loop (the difference being that a for-in loop enumerates properties in the prototype chain as well).",
    "href": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/keys",
    "type": "Method"
  },
  {
    "name": "Object.preventExtensions()",
    "desc": "The Object.preventExtensions() method prevents new properties from ever being added to an object (i.e. prevents future extensions to the object).",
    "href": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/preventExtensions",
    "type": "Method"
  },
  {
    "name": "Object.prototype.__defineGetter__()",
    "desc": "The __defineGetter__ method binds an object's property to a function to be called when that property is looked up.",
    "href": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/__defineGetter__",
    "type": "Method",
    "warning": "This deprecated API should no longer be used, but will probably still work."
  },
  {
    "name": "Object.prototype.__defineSetter__()",
    "desc": "The __defineSetter__ method binds an object's property to a function to be called when an attempt is made to set that property.",
    "href": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/__defineSetter__",
    "type": "Method",
    "warning": "This deprecated API should no longer be used, but will probably still work."
  },
  {
    "name": "Object.prototype.__lookupGetter__()",
    "desc": "The __lookupGetter__ method returns the function bound as a getter to the specified property.",
    "href": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/__lookupGetter__",
    "type": "Method",
    "warning": "This deprecated API should no longer be used, but will probably still work."
  },
  {
    "name": "Object.prototype.__lookupSetter__()",
    "desc": "The __lookupSetter__ method returns the function bound as a setter to the specified property.",
    "href": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/__lookupSetter__",
    "type": "Method",
    "warning": "This deprecated API should no longer be used, but will probably still work."
  },
  {
    "name": "Object.prototype.hasOwnProperty()",
    "desc": "The hasOwnProperty() method returns a boolean indicating whether the object has the specified property.",
    "href": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/hasOwnProperty",
    "type": "Method"
  },
  {
    "name": "Object.prototype.isPrototypeOf()",
    "desc": "The isPrototypeOf() method tests for an object in another object's prototype chain.",
    "href": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/isPrototypeOf",
    "type": "Method"
  },
  {
    "name": "Object.prototype.propertyIsEnumerable()",
    "desc": "The propertyIsEnumerable() method returns a Boolean indicating whether the specified property is enumerable.",
    "href": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/propertyIsEnumerable",
    "type": "Method"
  },
  {
    "name": "Object.prototype.toLocaleString()",
    "desc": "The toLocaleString() method returns a string representing the object. This method is meant to be overridden by derived objects for locale-specific purposes.",
    "href": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/toLocaleString",
    "type": "Method"
  },
  {
    "name": "Object.prototype.toSource()",
    "desc": "The toSource() method returns a string representing the source code of the object.",
    "href": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/toSource",
    "type": "Method"
  },
  {
    "name": "Object.prototype.toString()",
    "desc": "The toString() method returns a string representing object.",
    "href": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/toString",
    "type": "Method"
  },
  {
    "name": "Object.prototype.unwatch()",
    "desc": "The unwatch() method removes a watchpoint set with the watch() method.",
    "href": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/unwatch",
    "type": "Method"
  },
  {
    "name": "Object.prototype.valueOf()",
    "desc": "Technical review completed.",
    "href": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/valueOf",
    "type": "Method"
  },
  {
    "name": "Object.prototype.watch()",
    "desc": "The watch() method watches for a property to be assigned a value and runs a function when that occurs.",
    "href": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/watch",
    "type": "Method"
  },
  {
    "name": "Object.seal()",
    "desc": "The Object.seal() method seals an object, preventing new properties from being added to it and marking all existing properties as non-configurable. Values of present properties can still be changed as long as they are writable.",
    "href": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/seal",
    "type": "Method"
  },
  {
    "name": "Object.setPrototypeOf()",
    "desc": "The Object.setPrototypeOf() method sets the prototype (i.e., the internal [[Prototype]] property) of a specified object to another object or null.",
    "href": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/setPrototypeOf",
    "type": "Method"
  },
  {
    "name": "Object.values()",
    "desc": "The Object.values() method returns an array of a given object's own enumerable property values, in the same order as that provided by a for...in loop (the difference being that a for-in loop enumerates properties in the prototype chain as well).",
    "href": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/values",
    "type": "Method",
    "warning": "This is an experimental API that should not be used in production code."
  },
  {
    "name": "Function.arguments",
    "desc": "The function.arguments property refers to an an array-like object corresponding to the arguments passed to a function. Use the simple variable arguments instead.",
    "href": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/arguments",
    "type": "Property",
    "warning": "This deprecated API should no longer be used, but will probably still work."
  },
  {
    "name": "Function.caller",
    "desc": "The function.caller property returns the function that invoked the specified function.",
    "href": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/caller",
    "type": "Property"
  },
  {
    "name": "Function.displayName",
    "desc": "The function.displayName property returns the display name of the function.",
    "href": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/displayName",
    "type": "Property"
  },
  {
    "name": "Function.length",
    "desc": "The length property specifies the number of arguments expected by the function.",
    "href": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/length",
    "type": "Property"
  },
  {
    "name": "Function.name",
    "desc": "The function.name property returns the name of the function.",
    "href": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/name",
    "type": "Property"
  },
  {
    "name": "Function.prototype",
    "desc": "The Function.prototype property represents the Function prototype object.",
    "href": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/prototype",
    "type": "Property"
  },
  {
    "name": "Function.prototype.apply()",
    "desc": "The apply() method calls a function with a given this value and arguments provided as an array (or an array-like object).",
    "href": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/apply",
    "type": "Method"
  },
  {
    "name": "Function.prototype.bind()",
    "desc": "The bind() method creates a new function that, when called, has its this keyword set to the provided value, with a given sequence of arguments preceding any provided when the new function is called.",
    "href": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/bind",
    "type": "Method"
  },
  {
    "name": "Function.prototype.call()",
    "desc": "The call() method calls a function with a given this value and arguments provided individually.",
    "href": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/call",
    "type": "Method"
  },
  {
    "name": "Function.prototype.isGenerator()",
    "desc": "The isGenerator() method determines whether or not a function is a generator.",
    "href": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/isGenerator",
    "type": "Method"
  },
  {
    "name": "Function.prototype.toSource()",
    "desc": "The toSource() method returns a string representing the source code of the object.",
    "href": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/toSource",
    "type": "Method"
  },
  {
    "name": "Function.prototype.toString()",
    "desc": "The toString() method returns a string representing the source code of the function.",
    "href": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/toString",
    "type": "Method"
  },
  {"name": "Syntax", "href": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object#Syntax"},
  {"name": "Description", "href": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object#Description"},
  {"name": "Object", "href": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object#Properties_of_the_Object_constructor"},
  {"name": "Object", "href": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object#Methods_of_the_Object_constructor"},
  {"name": "ObjectObject", "href": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object#Object_instances_and_Object_prototype_object"},
  {"name": "Examples", "href": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object#Examples"},
  {"name": "Specifications", "href": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object#Specifications"},
  {"name": "Browser compatibility", "href": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object#Browser_compatibility"},
  {"name": "See also", "href": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object#See_also"},
]
